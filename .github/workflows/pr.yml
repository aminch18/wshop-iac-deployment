name: PR CI
on:
  workflow_dispatch:
  pull_request:
    types: [opened, edited, synchronize]

env:
  ARM_CLIENT_ID: ${{ secrets.ARM_CLIENT_ID }}
  ARM_CLIENT_SECRET: ${{ secrets.ARM_CLIENT_SECRET }}
  ARM_TENANT_ID: ${{ secrets.ARM_TENANT_ID }}
  ARM_SUBSCRIPTION_ID: ${{ secrets.ARM_SUBSCRIPTION_ID }}
  ARM_SKIP_PROVIDER_REGISTRATION: true
  ENTITY_FW_CORE_VERSION: 6.0.0-rc.2.21480.5
  AZURE_WEBAPP_NAME: todos-api
  AZURE_WEBAPP_PACKAGE_PATH: ./app
  PROJECT_PATH: src/RestApi/RestApi.csproj
  DOTNET_VERSION: '6.0.x'
  CONFIGURATION: Release

jobs:
  terraform:
    name: Terraform
    runs-on: ubuntu-latest
    steps:
      - name: "Checkout"
        uses: actions/checkout@master

      - name: Azure Login üîê
        run: az login --service-principal -u ${{ env.ARM_CLIENT_ID}} -p ${{ env.ARM_CLIENT_SECRET }} --tenant ${{ env.ARM_TENANT_ID }}

      - uses: hashicorp/setup-terraform@v1
        with:
          terraform_version: 1.0.9

      - name: Terraform Init
        run:  |
          cd terraform
          terraform init -upgrade

      - name: Terraform Planüîß
        id: plan
        run:  |
          cd terraform
          terraform plan
        continue-on-error: true

      - uses: actions/github-script@0.9.0
        if: github.event_name == 'pull_request'
        env:
          PLAN: "terraform\n${{ steps.plan.outputs.stdout }}"
        with:
          github-token: ${{ secrets.GITHUB_TOKEN }}
          script: |
            const output = `#### Terraform Format and Style üñå\`${{ steps.fmt.outcome }}\`
            #### Terraform Initialization ‚öôÔ∏è\`${{ steps.init.outcome }}\`
            #### Terraform Validation ü§ñ\`${{ steps.validate.outputs.stdout }}\`
            #### Terraform Plan üìñ\`${{ steps.plan.outcome }}\`
            
            <details><summary>Show Plan</summary>
            
            \`\`\`\n
            ${process.env.PLAN}
            \`\`\`
            
            </details>
            
            *Pusher: @${{ github.actor }}, Action: \`${{ github.event_name }}\`, Working Directory: \`${{ env.tf_actions_working_dir }}\`, Workflow: \`${{ github.workflow }}\`*`;
              
            github.issues.createComment({
              issue_number: context.issue.number,
              owner: context.repo.owner,
              repo: context.repo.repo,
              body: output
            })

      - name: Azure Logout üîê
        run: az logout

  build:
    needs: terraform
    name: Build
    runs-on: ubuntu-latest
    steps:
      - name: Checkout üõéÔ∏è
        uses: actions/checkout@v2.3.1
        with:
          persist-credentials: false
      
      - name: Setup dotnet ${{ env.DOTNET_VERSION }}
        uses: actions/setup-dotnet@v1
        with:
          dotnet-version: ${{ env.DOTNET_VERSION }}
          include-prerelease: true

      - name: Restore packages üîß
        run: dotnet restore "${{ env.PROJECT_PATH }}"

      - name: Build app üîß
        run: dotnet build "${{ env.PROJECT_PATH }}" --configuration ${{ env.CONFIGURATION }} --no-restore

      - name: Test app
        run: dotnet test "${{ env.PROJECT_PATH }}" --no-build