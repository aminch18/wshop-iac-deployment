name: "Terraform PRs"
on:
  workflow_dispatch:
  pull_request:
    types: [opened, edited, synchronize]
    branches:
      - main

env:
  ARM_CLIENT_ID: ${{ secrets.ARM_CLIENT_ID }}
  ARM_CLIENT_SECRET: ${{ secrets.ARM_CLIENT_SECRET }}
  ARM_TENANT_ID: ${{ secrets.ARM_TENANT_ID }}
  ARM_SUBSCRIPTION_ID: ${{ secrets.ARM_SUBSCRIPTION_ID }}
  ARM_SKIP_PROVIDER_REGISTRATION: true

jobs:
  dev:
    name: "Terraform Dev Environment"
    runs-on: ubuntu-latest

    defaults:
      run:
        shell: bash
        working-directory: terraform

    steps:
      - name: "Checkout"
        uses: actions/checkout@master

      - name: Azure Login üîê
        run: az login --service-principal -u ${{ env.ARM_CLIENT_ID}} -p ${{ env.ARM_CLIENT_SECRET }} --tenant ${{ env.ARM_TENANT_ID }}

      - uses: hashicorp/setup-terraform@v1
        with:
          terraform_version: 1.0.9

      - name: Terraform Init
        run:  terraform init -upgrade
        env:
          TF_VAR_environment: dev

      - name: Terraform Planüîß
        run: terraform plan
        continue-on-error: true

      - uses: actions/github-script@0.9.0
        if: github.event_name == 'pull_request'
        env:
          PLAN: "terraform\n${{ steps.plan.outputs.stdout }}"
        with:
          github-token: ${{ secrets.GITHUB_TOKEN }}
          script: |
            const output = `#### Terraform Format and Style üñå\`${{ steps.fmt.outcome }}\`
            #### Terraform Initialization ‚öôÔ∏è\`${{ steps.init.outcome }}\`
            #### Terraform Validation ü§ñ\`${{ steps.validate.outputs.stdout }}\`
            #### Terraform Plan üìñ\`${{ steps.plan.outcome }}\`
            
            <details><summary>Show Plan</summary>
            
            \`\`\`\n
            ${process.env.PLAN}
            \`\`\`
            
            </details>
            
            *Pusher: @${{ github.actor }}, Action: \`${{ github.event_name }}\`, Working Directory: \`${{ env.tf_actions_working_dir }}\`, Workflow: \`${{ github.workflow }}\`*`;
              
            github.issues.createComment({
              issue_number: context.issue.number,
              owner: context.repo.owner,
              repo: context.repo.repo,
              body: output
            })

      - name: Azure Logout üîê
        run: az logout

  stg:
    needs: dev
    name: "Terraform Stg Environment"
    runs-on: ubuntu-latest
    
    defaults:
      run:
        shell: bash
        working-directory: terraform

    steps:
      - name: "Checkout"
        uses: actions/checkout@master

      - name: Azure Login üîê
        run: az login --service-principal -u ${{ env.ARM_CLIENT_ID}} -p ${{ env.ARM_CLIENT_SECRET }} --tenant ${{ env.ARM_TENANT_ID }}

      - uses: hashicorp/setup-terraform@v1
        with:
          terraform_version: 1.0.9

      - name: Terraform Init
        run:  terraform init -upgrade

      - name: Terraform Planüîß
        run: terraform plan

      - uses: actions/github-script@0.9.0
        if: github.event_name == 'pull_request'
        env:
          PLAN: "terraform\n${{ steps.plan.outputs.stdout }}"
        with:
          github-token: ${{ secrets.GITHUB_TOKEN }}
          script: |
            const output = `#### Terraform Format and Style üñå\`${{ steps.fmt.outcome }}\`
            #### Terraform Initialization ‚öôÔ∏è\`${{ steps.init.outcome }}\`
            #### Terraform Validation ü§ñ\`${{ steps.validate.outputs.stdout }}\`
            #### Terraform Plan üìñ\`${{ steps.plan.outcome }}\`
            
            <details><summary>Show Plan</summary>
            
            \`\`\`\n
            ${process.env.PLAN}
            \`\`\`
            
            </details>
            
            *Pusher: @${{ github.actor }}, Action: \`${{ github.event_name }}\`, Working Directory: \`${{ env.tf_actions_working_dir }}\`, Workflow: \`${{ github.workflow }}\`*`;
              
            github.issues.createComment({
              issue_number: context.issue.number,
              owner: context.repo.owner,
              repo: context.repo.repo,
              body: output
            })

      - name: Azure Logout üîê
        run: az logout

  prd:
    needs: stg
    name: "Terraform PRD Environment"
    runs-on: ubuntu-latest
    
    defaults:
      run:
        shell: bash
        working-directory: terraform

    env:
      TF_VAR_environment: prd

    steps:
      - name: "Checkout"
        uses: actions/checkout@master

      - name: Azure Login üîê
        run: az login --service-principal -u ${{ env.ARM_CLIENT_ID}} -p ${{ env.ARM_CLIENT_SECRET }} --tenant ${{ env.ARM_TENANT_ID }}

      - uses: hashicorp/setup-terraform@v1
        with:
          terraform_version: 1.0.9

      - name: Terraform Init
        run:  terraform init -upgrade

      - name: Terraform Planüîß
        run: terraform plan

      - uses: actions/github-script@0.9.0
        if: github.event_name == 'pull_request'
        env:
          PLAN: "terraform\n${{ steps.plan.outputs.stdout }}"
        with:
          github-token: ${{ secrets.GITHUB_TOKEN }}
          script: |
            const output = `#### Terraform Format and Style üñå\`${{ steps.fmt.outcome }}\`
            #### Terraform Initialization ‚öôÔ∏è\`${{ steps.init.outcome }}\`
            #### Terraform Validation ü§ñ\`${{ steps.validate.outputs.stdout }}\`
            #### Terraform Plan üìñ\`${{ steps.plan.outcome }}\`
            
            <details><summary>Show Plan</summary>
            
            \`\`\`\n
            ${process.env.PLAN}
            \`\`\`
            
            </details>
            
            *Pusher: @${{ github.actor }}, Action: \`${{ github.event_name }}\`, Working Directory: \`${{ env.tf_actions_working_dir }}\`, Workflow: \`${{ github.workflow }}\`*`;
              
            github.issues.createComment({
              issue_number: context.issue.number,
              owner: context.repo.owner,
              repo: context.repo.repo,
              body: output
            })

      - name: Azure Logout üîê
        run: az logout